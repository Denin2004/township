# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    locale: '%env(resolve:LOCALE)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Kernel.php'
            - '../src/Tests/'
    App\Entity\:
        resource: '../src/Entity'
        tags: ['controller.service_arguments']
            
    App\Services\SiteConfig\SiteConfig:
        class: App\Services\SiteConfig\SiteConfig
        arguments: ['%kernel.project_dir%', '@session', '%kernel.default_locale%']
        public: true
            
    db_connection:
        class: Doctrine\DBAL\Connection
        factory: Doctrine\DBAL\DriverManager::getConnection
        arguments:
            $params:
                driver: 'pdo_pgsql'
                host:     "%env(resolve:DATABASE_HOST)%"
                port:     "%env(resolve:DATABASE_PORT)%"
                dbname:   "%env(resolve:DATABASE_NAME)%"
                user:     "%env(resolve:DATABASE_USER)%"
                password: "%env(resolve:DATABASE_PSW)%"
                charset:  UTF8

    app.dbprovider:
        class: App\Services\DbProvider
        arguments: ['@db_connection', '@security.token_storage', '@App\Services\SiteConfig\SiteConfig']

    App\Entity\Entity:
        class: App\Entity\Entity
        arguments: ['@app.dbprovider']

    app.auth.handler:
        class: App\Services\Security\AuthenticationHandler
        arguments: ['@router', '@session']

    app.user.provider:
        class: App\Services\Security\UserProvider
        arguments: ['@request_stack', '@security.password_encoder', '@App\Entity\UACEntity', '@twig']

    app.access.denied.controller:
        class: App\Services\Security\DeniedHandler
        arguments: ['@service_container', '@router']

    app.voter:
        class: App\Services\Security\RouteVoter
        tags: [security.voter]
        public: false

    form.Account:
        class: App\Form\AccountManager\Account
        arguments: ['@App\Entity\UACEntity', '@App\Entity\Land', '@security.token_storage', '@security.password_encoder']
        tags: [form.type]
        
    form.Range:
        class: App\Form\React\ReactRangeType
        arguments: ['@App\Services\SiteConfig\SiteConfig']
        tags: [form.type]
        
    App\Form\Budget\EditItem:
        class: App\Form\Budget\EditItem
        arguments: ['@App\Entity\Budget']
        tags: [form.type]

    App\Form\Budget\CreateItem:
        class: App\Form\Budget\CreateItem
        arguments: ['@App\Entity\Budget']
        tags: [form.type]
        